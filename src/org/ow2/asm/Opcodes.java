package org.ow2.asm;

public interface Opcodes {

  static final int
    V1_8 = 52; // #P
  
  static final int
    ACC_PUBLIC = 0x0001, // class, field, method #P
    ACC_PRIVATE = 0x0002, // class, field, method #P
    ACC_PROTECTED = 0x0004, // class, field, method #P
    ACC_STATIC = 0x0008, // field, method #P
    ACC_FINAL = 0x0010, // class, field, method, parameter #P
    ACC_SUPER = 0x0020, // class #P
    ACC_SYNCHRONIZED = 0x0020, // method
    ACC_OPEN = 0x0020, // module
    ACC_TRANSITIVE = 0x0020, // module requires
    ACC_VOLATILE = 0x0040, // field
    ACC_BRIDGE = 0x0040, // method
    ACC_STATIC_PHASE = 0x0040, // module requires
    ACC_VARARGS = 0x0080, // method #P
    ACC_TRANSIENT = 0x0080, // field
    ACC_NATIVE = 0x0100, // method
    ACC_INTERFACE = 0x0200, // class
    ACC_ABSTRACT = 0x0400, // class, method #P
    ACC_STRICT = 0x0800, // method
    ACC_SYNTHETIC = 0x1000, // class, field, method, parameter, module #P
    ACC_ANNOTATION = 0x2000, // class
    ACC_ENUM = 0x4000, // class(?) field inner
    ACC_MANDATED = 0x8000, // parameter, module, module *
    ACC_MODULE = 0x8000, // class
    ACC_DEPRECATED = 0x020000; // 131072; // #P

  static final int
    T_BOOLEAN = 4,
    T_CHAR = 5,
    T_FLOAT = 6,
    T_DOUBLE = 7,
    T_BYTE = 8,
    T_SHORT = 9,
    T_INT = 10,
    T_LONG = 11;

  static final int
    H_GETFIELD = 1,
    H_GETSTATIC = 2,
    H_PUTFIELD = 3,
    H_PUTSTATIC = 4,
    H_INVOKEVIRTUAL = 5,
    H_INVOKESTATIC = 6, // #P
    H_INVOKESPECIAL = 7,
    H_NEWINVOKESPECIAL = 8,
    H_INVOKEINTERFACE = 9;

  static final int
    F_NEW = -1,
    F_FULL = 0,
    F_APPEND = 1,
    F_CHOP = 2,
    F_SAME = 3,
    F_SAME1 = 4;

  static final Integer
    TOP = Frame.ITEM_TOP,
    INTEGER = Frame.ITEM_INTEGER,
    FLOAT = Frame.ITEM_FLOAT,
    DOUBLE = Frame.ITEM_DOUBLE,
    LONG = Frame.ITEM_LONG,
    NULL = Frame.ITEM_NULL,
    UNINITIALIZED_THIS = Frame.ITEM_UNINITIALIZED_THIS;

  static final int
    NOP = 0, // visitInsn
    ACONST_NULL = 1, // - #P
    ICONST_M1 = 2, // - #P
    ICONST_0 = 3, // - #P
    ICONST_1 = 4, // - #P
    ICONST_2 = 5, // - #P
    ICONST_3 = 6, // - #P
    ICONST_4 = 7, // - #P
    ICONST_5 = 8, // - #P
    LCONST_0 = 9, // - #P
    LCONST_1 = 10, // - #P
    FCONST_0 = 11, // -
    FCONST_1 = 12, // -
    FCONST_2 = 13, // -
    DCONST_0 = 14, // -
    DCONST_1 = 15, // -
    BIPUSH = 16, // visitIntInsn #P
    SIPUSH = 17, // - #P
    LDC = 18, // visitLdcInsn
    ILOAD = 21, // visitVarInsn #P
    LLOAD = 22, // - #P
    FLOAD = 23, // - #P
    DLOAD = 24, // - #P
    ALOAD = 25, // - #P
    IALOAD = 46, // visitInsn
    LALOAD = 47, // -
    FALOAD = 48, // -
    DALOAD = 49, // -
    AALOAD = 50, // -
    BALOAD = 51, // -
    CALOAD = 52, // -
    SALOAD = 53, // -
    ISTORE = 54, // visitVarInsn
    LSTORE = 55, // -
    FSTORE = 56, // -
    DSTORE = 57, // -
    ASTORE = 58, // - #P
    IASTORE = 79, // visitInsn
    LASTORE = 80, // -
    FASTORE = 81, // -
    DASTORE = 82, // -
    AASTORE = 83, // - #P
    BASTORE = 84, // -
    CASTORE = 85, // -
    SASTORE = 86, // -
    POP = 87, // - #P
    POP2 = 88, // -
    DUP = 89, // - #P
    DUP_X1 = 90, // -
    DUP_X2 = 91, // -
    DUP2 = 92, // -
    DUP2_X1 = 93, // -
    DUP2_X2 = 94, // -
    SWAP = 95, // -
    IADD = 96, // -
    LADD = 97, // -
    FADD = 98, // -
    DADD = 99, // -
    ISUB = 100, // -
    LSUB = 101, // -
    FSUB = 102, // -
    DSUB = 103, // -
    IMUL = 104, // -
    LMUL = 105, // -
    FMUL = 106, // -
    DMUL = 107, // -
    IDIV = 108, // -
    LDIV = 109, // -
    FDIV = 110, // -
    DDIV = 111, // -
    IREM = 112, // -
    LREM = 113, // -
    FREM = 114, // -
    DREM = 115, // -
    INEG = 116, // -
    LNEG = 117, // -
    FNEG = 118, // -
    DNEG = 119, // -
    ISHL = 120, // -
    LSHL = 121, // -
    ISHR = 122, // -
    LSHR = 123, // -
    IUSHR = 124, // -
    LUSHR = 125, // -
    IAND = 126, // -
    LAND = 127, // -
    IOR = 128, // -
    LOR = 129, // -
    IXOR = 130, // -
    LXOR = 131, // -
    IINC = 132, // visitIincInsn
    I2L = 133, // visitInsn
    I2F = 134, // -
    I2D = 135, // -
    L2I = 136, // -
    L2F = 137, // -
    L2D = 138, // -
    F2I = 139, // -
    F2L = 140, // -
    F2D = 141, // -
    D2I = 142, // -
    D2L = 143, // -
    D2F = 144, // -
    I2B = 145, // -
    I2C = 146, // -
    I2S = 147, // -
    LCMP = 148, // -
    FCMPL = 149, // -
    FCMPG = 150, // -
    DCMPL = 151, // -
    DCMPG = 152, // -
    IFEQ = 153, // visitJumpInsn #P
    IFNE = 154, // - #P
    IFLT = 155, // -
    IFGE = 156, // -
    IFGT = 157, // -
    IFLE = 158, // -
    IF_ICMPEQ = 159, // -
    IF_ICMPNE = 160, // -
    IF_ICMPLT = 161, // -
    IF_ICMPGE = 162, // -
    IF_ICMPGT = 163, // -
    IF_ICMPLE = 164, // -
    IF_ACMPEQ = 165, // -
    IF_ACMPNE = 166, // - #P
    GOTO = 167, // - #P
    JSR = 168, // - 
    RET = 169, // visitVarInsn
    TABLESWITCH = 170, // visiTableSwitchInsn
    LOOKUPSWITCH = 171, // visitLookupSwitch
    IRETURN = 172, // visitInsn #P
    LRETURN = 173, // - #P
    FRETURN = 174, // - #P
    DRETURN = 175, // - #P
    ARETURN = 176, // - #P
    RETURN = 177, // - #P
    GETSTATIC = 178, // visitFieldInsn #P
    PUTSTATIC = 179, // - #P
    GETFIELD = 180, // - #P
    PUTFIELD = 181, // - #P
    INVOKEVIRTUAL = 182, // visitMethodInsn #P
    INVOKESPECIAL = 183, // - #P
    INVOKESTATIC = 184, // - #P
    INVOKEINTERFACE = 185, // -
    INVOKEDYNAMIC = 186, // visitInvokeDynamicInsn
    NEW = 187, // visitTypeInsn #P
    NEWARRAY = 188, // visitIntInsn
    ANEWARRAY = 189, // visitTypeInsn #P
    ARRAYLENGTH = 190, // visitInsn
    ATHROW = 191, // - #P
    CHECKCAST = 192, // visitTypeInsn #P
    INSTANCEOF = 193, // - #P
    MONITORENTER = 194, // visitInsn
    MONITOREXIT = 195, // -
    MULTIANEWARRAY = 197, // visitMultiANewArrayInsn
    IFNULL = 198, // visitJumpInsn #P
    IFNONNULL = 199; // - #P

}
